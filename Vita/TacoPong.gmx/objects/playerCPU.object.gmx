<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_Player_Hot</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pSpeed</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>6</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ai</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = 0;
if (global.gameType == 1)
{
	visible = false;
	solid = false;
}
else if (global.gameType == 2)
{
	visible = true;	
	solid = true;
	ai = global.aiLevel;
	randomize();
	dir = choose(0, 1);
	// 0 = up 
	// 1 = down
	if (ai == 3)
	{
		pSpeed = 7;	
	}
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.gameType == 1)
{
	y = instP2.y;	
}
else if (global.gameType == 2)
{
// Baby does not move

// Easy
if (ai = 1)
{
	if (dir == 0)
	{
		if ((y-sprite_height/2) &gt;= 0)
		{
			y-=pSpeed;
		}
		else
		{
			dir = 1;	
		}
	}
	else if (dir == 1)
	{
		if ((y+sprite_height/2) &lt;= room_height)
		{
			y+=pSpeed;
		}
		else
		{
			dir = 0;	
		}
	}
}

// Avg
else if (ai = 2)
{
	if (lvlManager.ballInPlay == true)
	{
		if ((obj_cinneball.y &lt; y) &amp;&amp; lvlManager.ballInPlay == true)
		{
			y-=pSpeed;	
		}
		else if ((obj_cinneball.y &gt; y) &amp;&amp; lvlManager.ballInPlay == true)
		{
			y+=pSpeed;	
		}
	}
	else
	{
		y = y;	
	}
}
else if (ai == 3)
{
	if (lvlManager.ballInPlay == true)
	{
		// If going towards P1 return to center
		if (lvlManager.ballInPlay == true &amp;&amp; obj_cinneball.dir == 1)
		{
			if (y &lt; (room_height/2)-15)
			{
				y+=pSpeed;	
			}
			else if (y &gt; (room_height/2)+15)
			{
				y-=pSpeed;	
			}
		}
		// Going towards CPU move towards ball
		else if (lvlManager.ballInPlay == true &amp;&amp; obj_cinneball.dir == 2)
		{
			if (lvlManager.ballInPlay == true)
			{
				if ((obj_cinneball.y &lt; y) &amp;&amp; lvlManager.ballInPlay == true)
				{
					y-=pSpeed;	
				}
				else if ((obj_cinneball.y &gt; y) &amp;&amp; lvlManager.ballInPlay == true)
				{
					y+=pSpeed;	
				}
			}	
		}
		else if (lvlManager.ballInPlay == true &amp;&amp; obj_cinneball.dir == 0)
		{
			if (lvlManager.ballInPlay == true)
			{
				if ((obj_cinneball.y &lt; y) &amp;&amp; lvlManager.ballInPlay == true)
				{
					y-=pSpeed;	
				}
				else if ((obj_cinneball.y &gt; y) &amp;&amp; lvlManager.ballInPlay == true)
				{
					y+=pSpeed;	
				}
			}	
		}
	}
	// return to center if no ball
	else
	{
			if (y &lt; (room_height/2)-15)
			{
				y+=pSpeed;	
			}
			else if (y &gt; (room_height/2)+15)
			{
				y-=pSpeed;	
			}
	}
}



}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
